name: Deployment pipeline

on:
  ### trigger workflow on push or pull request on master branch only
  push:
    branches:
      - master

  ### make it impossible to push code directly to main/ master
  ### at the same time, run the workflow for all other possible direct pushes to main/ master
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:
  deployment_pipeline:
    runs-on: ubuntu-18.04
    steps:
      ### check out the code from repo because virtual env does not have any code
      - uses: actions/checkout@v2

      ### set up node.js to utilize cmd specified in package.json
      - uses: actions/setup-node@v1
        ### 'with' is a parameter of action
        with:
          node-version: '12.x'

      ### install the dependencies above
      - name: npm install
        run: npm install

      ### cmd to run eslint
      - name: lint
        run: npm run eslint

      ### cmd to run build
      - name: build
        run: npm run build

      ### cmd to run test
      - name: test
        run: npm run test

      ### cmd to run e2e testing
      - name: test:e2e
        ### set up cypress to run e2e testing
        uses: cypress-io/github-action@v2
        with:
          ### specify how to run cypress test
          command: npm run test:e2e
          ### start the application before running the cmd
          start: npm run start-prod
          ### specify to wait for the server to be on this url before the test
          wait-on: http://localhost:5000

      ### cmd to push code to heroku
      - name: pushing to heroku
        ### set up heroku for deployment
        uses: akhileshns/heroku-deploy@v3.12.12
        ### CONDITIONAL ACTION: only runs when changes are merged to main branch
        ### & git msg does not contain "#skip"
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
        ### specify parameters
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: 'my-pokedex-pokemon'
          heroku_email: 'vani.dniess.baby@gmail.com'
          healthcheck: 'https://my-pokedex-pokemon.herokuapp.com/health'
          ### check if the value returned by sending a GET request to the healthcheck url is equal to the checkstring
          ### checkstring: 'ok'
          ### rollbackonhealthcheckfailed: true

      ### cmd to bump version and push tag
      - uses: actions/checkout@v2

      - name: bump version and push tag
        ### use of hash to specify version (instead of numbers) because code of that hash version does not change
        uses: anothrNick/github-tag-action@eca2b69f9e2c24be7decccd0f15fdb1ea5906598
        ### CONDITIONAL ACTION: only runs when changes are merged into main branch
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

      ### set up cmd to send notifications upon failed/ successful build
      - name: action-slack
        ### https://github.com/marketplace/actions/action-slack
        uses: 8398a7/action-slack@v3.9.2
        with:
          ### get the current status of job
          status: ${{ job.status }}
          fields: repo,message,commit,author,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        ### pick up events even if the job fails or is canceled
        ### this condition causes the step to always execute: https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#job-status-check-functions
        if: ${{ always() }}
